{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maxielmakinon\\\\Desktop\\\\techcompare-frontend\\\\TECHCOMPARE-master\\\\src\\\\components\\\\Compare\\\\GPUComparison.js\",\n  _s = $RefreshSig$();\n// src/components/Compare/GPUComparison.js\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GPUComparison = ({\n  gpus,\n  onCompare\n}) => {\n  _s();\n  // Si gpus no es un array, esperamos\n  if (!Array.isArray(gpus)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center text-gray-300\",\n      children: \"Cargando GPUs\\u2026\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 12\n    }, this);\n  }\n  const [selectedGPU1, setSelectedGPU1] = useState(null);\n  const [selectedGPU2, setSelectedGPU2] = useState(null);\n  const handleCompare = () => {\n    if (selectedGPU1 && selectedGPU2) {\n      onCompare([selectedGPU1, selectedGPU2]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto px-4 py-12\",\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setSelectedGPU1(parseInt(e.target.value, 10)),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"-- Seleccionar --\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), gpus.map(gpu => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: gpu.id,\n        children: gpu.model\n      }, gpu.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(GPUComparison, \"xbpoGk7OybfdgqXMTUyNVEB1jQg=\");\n_c = GPUComparison;\nexport default GPUComparison;\nvar _c;\n$RefreshReg$(_c, \"GPUComparison\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","GPUComparison","gpus","onCompare","_s","Array","isArray","className","children","fileName","_jsxFileName","lineNumber","columnNumber","selectedGPU1","setSelectedGPU1","selectedGPU2","setSelectedGPU2","handleCompare","onChange","e","parseInt","target","value","map","gpu","id","model","_c","$RefreshReg$"],"sources":["C:/Users/maxielmakinon/Desktop/techcompare-frontend/TECHCOMPARE-master/src/components/Compare/GPUComparison.js"],"sourcesContent":["// src/components/Compare/GPUComparison.js\n\nimport React, { useState } from 'react';\n\nconst GPUComparison = ({ gpus, onCompare }) => {\n  // Si gpus no es un array, esperamos\n  if (!Array.isArray(gpus)) {\n    return <div className=\"text-center text-gray-300\">Cargando GPUsâ€¦</div>;\n  }\n\n  const [selectedGPU1, setSelectedGPU1] = useState(null);\n  const [selectedGPU2, setSelectedGPU2] = useState(null);\n\n  const handleCompare = () => {\n    if (selectedGPU1 && selectedGPU2) {\n      onCompare([selectedGPU1, selectedGPU2]);\n    }\n  };\n\n  return (\n    <div className=\"container mx-auto px-4 py-12\">\n      {/* ...resto de tu JSX igual */}\n      <select onChange={e => setSelectedGPU1(parseInt(e.target.value, 10))}>\n        <option value=\"\">-- Seleccionar --</option>\n        {gpus.map(gpu => (\n          <option key={gpu.id} value={gpu.id}>{gpu.model}</option>\n        ))}\n      </select>\n      {/* igual para el segundo dropdown */}\n    </div>\n  );\n};\n\nexport default GPUComparison;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,aAAa,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAC7C;EACA,IAAI,CAACC,KAAK,CAACC,OAAO,CAACJ,IAAI,CAAC,EAAE;IACxB,oBAAOF,OAAA;MAAKO,SAAS,EAAC,2BAA2B;MAAAC,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACxE;EAEA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACiB,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMmB,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIJ,YAAY,IAAIE,YAAY,EAAE;MAChCZ,SAAS,CAAC,CAACU,YAAY,EAAEE,YAAY,CAAC,CAAC;IACzC;EACF,CAAC;EAED,oBACEf,OAAA;IAAKO,SAAS,EAAC,8BAA8B;IAAAC,QAAA,eAE3CR,OAAA;MAAQkB,QAAQ,EAAEC,CAAC,IAAIL,eAAe,CAACM,QAAQ,CAACD,CAAC,CAACE,MAAM,CAACC,KAAK,EAAE,EAAE,CAAC,CAAE;MAAAd,QAAA,gBACnER,OAAA;QAAQsB,KAAK,EAAC,EAAE;QAAAd,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAC1CV,IAAI,CAACqB,GAAG,CAACC,GAAG,iBACXxB,OAAA;QAAqBsB,KAAK,EAAEE,GAAG,CAACC,EAAG;QAAAjB,QAAA,EAAEgB,GAAG,CAACE;MAAK,GAAjCF,GAAG,CAACC,EAAE;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAoC,CACxD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEN,CAAC;AAEV,CAAC;AAACR,EAAA,CA3BIH,aAAa;AAAA0B,EAAA,GAAb1B,aAAa;AA6BnB,eAAeA,aAAa;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}