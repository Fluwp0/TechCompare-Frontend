{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maxielmakinon\\\\Desktop\\\\techcompare-frontend\\\\TECHCOMPARE-master\\\\src\\\\components\\\\Auth\\\\AuthForm.js\",\n  _s = $RefreshSig$();\n// src/components/Auth/AuthForm.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthForm = ({\n  onSuccess\n}) => {\n  _s();\n  const [isLogin, setIsLogin] = useState(true);\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const toggleMode = () => {\n    setIsLogin(!isLogin);\n    setError('');\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    if (!email || !password || !isLogin && !username) {\n      setError('Completa todos los campos');\n      return;\n    }\n    if (!isLogin && password !== confirmPassword) {\n      setError('Las contraseñas no coinciden');\n      return;\n    }\n    setLoading(true);\n    try {\n      if (isLogin) {\n        // LOGIN: obtenemos todos y buscamos por email\n        const res = await fetch('/api/usuarios');\n        const list = await res.json();\n        const user = list.find(u => u.email === email);\n        if (!user) throw new Error('Usuario o contraseña incorrectos');\n        onSuccess(user);\n      } else {\n        // REGISTRO\n        const payload = {\n          nombre: username,\n          email,\n          gpu1: '',\n          gpu2: ''\n        };\n        const res = await fetch('/api/usuarios', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(payload)\n        });\n        if (!res.ok) throw new Error('Error al registrar usuario');\n        const newUser = await res.json();\n        onSuccess(newUser);\n      }\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-md mx-auto p-8 bg-purple-800 rounded\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold mb-6 text-center text-white\",\n      children: isLogin ? 'Iniciar sesión' : 'Crear cuenta'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-400 mb-4\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"space-y-4\",\n      children: [!isLogin && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Nombre de usuario\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        className: \"w-full p-3 rounded bg-purple-700 text-white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        className: \"w-full p-3 rounded bg-purple-700 text-white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Contrase\\xF1a\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        className: \"w-full p-3 rounded bg-purple-700 text-white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Confirmar contrase\\xF1a\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value),\n        className: \"w-full p-3 rounded bg-purple-700 text-white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        className: \"w-full py-3 bg-purple-600 hover:bg-purple-700 rounded text-white\",\n        children: loading ? isLogin ? 'Entrando…' : 'Registrando…' : isLogin ? 'Entrar' : 'Crear cuenta'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleMode,\n      className: \"mt-4 block mx-auto text-sm text-purple-200 hover:underline\",\n      children: isLogin ? '¿No tienes cuenta? Regístrate' : '¿Ya tienes cuenta? Inicia sesión'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthForm, \"cb8LIKAkK5TU0k3m/Ve0gW4OMCU=\");\n_c = AuthForm;\nexport default AuthForm;\nvar _c;\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AuthForm","onSuccess","_s","isLogin","setIsLogin","username","setUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","error","setError","loading","setLoading","toggleMode","handleSubmit","e","preventDefault","res","fetch","list","json","user","find","u","Error","payload","nombre","gpu1","gpu2","method","headers","body","JSON","stringify","ok","newUser","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/maxielmakinon/Desktop/techcompare-frontend/TECHCOMPARE-master/src/components/Auth/AuthForm.js"],"sourcesContent":["// src/components/Auth/AuthForm.js\nimport React, { useState } from 'react';\n\nconst AuthForm = ({ onSuccess }) => {\n  const [isLogin, setIsLogin] = useState(true);\n  const [username, setUsername] = useState('');\n  const [email, setEmail]       = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError]       = useState('');\n  const [loading, setLoading]   = useState(false);\n\n  const toggleMode = () => {\n    setIsLogin(!isLogin);\n    setError('');\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    if (!email || !password || (!isLogin && !username)) {\n      setError('Completa todos los campos');\n      return;\n    }\n    if (!isLogin && password !== confirmPassword) {\n      setError('Las contraseñas no coinciden');\n      return;\n    }\n\n    setLoading(true);\n    try {\n      if (isLogin) {\n        // LOGIN: obtenemos todos y buscamos por email\n        const res = await fetch('/api/usuarios');\n        const list = await res.json();\n        const user = list.find(u => u.email === email);\n        if (!user) throw new Error('Usuario o contraseña incorrectos');\n        onSuccess(user);\n      } else {\n        // REGISTRO\n        const payload = {\n          nombre: username,\n          email,\n          gpu1: '',\n          gpu2: ''\n        };\n        const res = await fetch('/api/usuarios', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(payload)\n        });\n        if (!res.ok) throw new Error('Error al registrar usuario');\n        const newUser = await res.json();\n        onSuccess(newUser);\n      }\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"max-w-md mx-auto p-8 bg-purple-800 rounded\">\n      <h2 className=\"text-3xl font-bold mb-6 text-center text-white\">\n        {isLogin ? 'Iniciar sesión' : 'Crear cuenta'}\n      </h2>\n      {error && <p className=\"text-red-400 mb-4\">{error}</p>}\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\n        {!isLogin && (\n          <input\n            type=\"text\"\n            placeholder=\"Nombre de usuario\"\n            value={username}\n            onChange={e => setUsername(e.target.value)}\n            className=\"w-full p-3 rounded bg-purple-700 text-white\"\n          />\n        )}\n        <input\n          type=\"email\"\n          placeholder=\"Email\"\n          value={email}\n          onChange={e => setEmail(e.target.value)}\n          className=\"w-full p-3 rounded bg-purple-700 text-white\"\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Contraseña\"\n          value={password}\n          onChange={e => setPassword(e.target.value)}\n          className=\"w-full p-3 rounded bg-purple-700 text-white\"\n        />\n        {!isLogin && (\n          <input\n            type=\"password\"\n            placeholder=\"Confirmar contraseña\"\n            value={confirmPassword}\n            onChange={e => setConfirmPassword(e.target.value)}\n            className=\"w-full p-3 rounded bg-purple-700 text-white\"\n          />\n        )}\n        <button\n          type=\"submit\"\n          disabled={loading}\n          className=\"w-full py-3 bg-purple-600 hover:bg-purple-700 rounded text-white\"\n        >\n          {loading\n            ? (isLogin ? 'Entrando…' : 'Registrando…')\n            : (isLogin ? 'Entrar' : 'Crear cuenta')}\n        </button>\n      </form>\n      <button\n        onClick={toggleMode}\n        className=\"mt-4 block mx-auto text-sm text-purple-200 hover:underline\"\n      >\n        {isLogin\n          ? '¿No tienes cuenta? Regístrate'\n          : '¿Ya tienes cuenta? Inicia sesión'}\n      </button>\n    </div>\n  );\n};\n\nexport default AuthForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}